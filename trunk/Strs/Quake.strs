// Quake 1 progs.dat file structure

[filemask="progs.dat"]
struct dprograms_t
{
  i32 version;
  i32 crc;

  x32 ofs_statements;
  i32 numstatements;
  
  x32 ofs_globaldefs;
  i32 numglobaldefs;
  
  x32 ofs_fielddefs;
  i32 numfielddefs;

  x32 ofs_functions;
  i32 numfunctions;

  x32 ofs_strings;
  i32 numstrings;

  x32 ofs_globals;
  i32 numglobals;

  i32 entityfields;

  child ddef_t [offset=ofs_globaldefs, count=numglobaldefs, group="Globals"];
  child ddef_t [offset=ofs_fielddefs, count=numfielddefs, group="Fields"];
  child dfunction_t [offset=ofs_functions, count=numfunctions, group="Functions"];
}

struct dfunction_t
{
  i32 first_statement;
  i32 parm_start;
  i32 locals;

  i32 profile;

  i32 s_name;
  i32 s_file;
  seek(parent.ofs_strings + s_name);
  str name;
  rewind;

  i32 numparms;
  repeat(8)
  {
    i8 parm_size;
  }

  if (first_statement >= 0)
  {
    child dstatement_t [offset=parent.ofs_statements + first_statement * 8];
  }
}

struct ddef_t
{
  bitfield(2)
  {
    enum16 type [enum=etype_t, frombit=0, tobit=14];
    i8 saveglobal [frombit=15, tobit=15];
  }
  u16 ofs;
  i32 s_name;
  seek(parent.ofs_strings + s_name);
  str name;
  rewind;
}

struct dstatement_t
{
  enum16 statement [enum=estatement_t];
  i16 a;
  i16 b;
  i16 c;

  if (statement != 0)
  {
    sibling;
  }
}

enum etype_t
{
  ev_void, ev_string, ev_float, ev_vector, ev_entity, ev_field, ev_function, ev_pointer
}

enum estatement_t
{
	OP_DONE,
	OP_MUL_F,
	OP_MUL_V,
	OP_MUL_FV,
	OP_MUL_VF,
	OP_DIV_F,
	OP_ADD_F,
	OP_ADD_V,
	OP_SUB_F,
	OP_SUB_V,
	
	OP_EQ_F,
	OP_EQ_V,
	OP_EQ_S,
	OP_EQ_E,
	OP_EQ_FNC,
	
	OP_NE_F,
	OP_NE_V,
	OP_NE_S,
	OP_NE_E,
	OP_NE_FNC,
	
	OP_LE,
	OP_GE,
	OP_LT,
	OP_GT,

	OP_LOAD_F,
	OP_LOAD_V,
	OP_LOAD_S,
	OP_LOAD_ENT,
	OP_LOAD_FLD,
	OP_LOAD_FNC,

	OP_ADDRESS,

	OP_STORE_F,
	OP_STORE_V,
	OP_STORE_S,
	OP_STORE_ENT,
	OP_STORE_FLD,
	OP_STORE_FNC,

	OP_STOREP_F,
	OP_STOREP_V,
	OP_STOREP_S,
	OP_STOREP_ENT,
	OP_STOREP_FLD,
	OP_STOREP_FNC,

	OP_RETURN,
	OP_NOT_F,
	OP_NOT_V,
	OP_NOT_S,
	OP_NOT_ENT,
	OP_NOT_FNC,
	OP_IF,
	OP_IFNOT,
	OP_CALL0,
	OP_CALL1,
	OP_CALL2,
	OP_CALL3,
	OP_CALL4,
	OP_CALL5,
	OP_CALL6,
	OP_CALL7,
	OP_CALL8,
	OP_STATE,
	OP_GOTO,
	OP_AND,
	OP_OR,
	
	OP_BITAND,
	OP_BITOR
}
